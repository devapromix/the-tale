# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: events_log.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='events_log.proto',
  package='events_log',
  syntax='proto3',
  serialized_pb=_b('\n\x10\x65vents_log.proto\x12\nevents_log\"K\n\x05\x45vent\x12\n\n\x02id\x18\x01 \x01(\x04\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\t\x12\x0c\n\x04tags\x18\x03 \x03(\x04\x12\x0c\n\x04turn\x18\x04 \x01(\x04\x12\x0c\n\x04time\x18\x05 \x01(\x01\"I\n\x0f\x41\x64\x64\x45ventRequest\x12\x0c\n\x04tags\x18\x01 \x03(\x04\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\t\x12\x0c\n\x04turn\x18\x03 \x01(\x04\x12\x0c\n\x04time\x18\x04 \x01(\x01\"\x13\n\x11\x41\x64\x64\x45ventsResponse\"\xcd\x01\n\x10GetEventsRequest\x12\x0c\n\x04tags\x18\x01 \x03(\x04\x12\x0c\n\x04page\x18\x02 \x01(\r\x12\x17\n\x0frecords_on_page\x18\x03 \x01(\r\x12<\n\x0bsort_method\x18\x04 \x01(\x0e\x32\'.events_log.GetEventsRequest.SortMethod\"F\n\nSortMethod\x12\x0c\n\x08TIME_ASC\x10\x00\x12\r\n\tTIME_DESC\x10\x01\x12\x0c\n\x08TURN_ASC\x10\x02\x12\r\n\tTURN_DESC\x10\x03\"\x13\n\x11GetEventsResponse\"\x1a\n\x18\x44\x65\x62ugClearServiceRequest\"\x1b\n\x19\x44\x65\x62ugClearServiceResponseb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_GETEVENTSREQUEST_SORTMETHOD = _descriptor.EnumDescriptor(
  name='SortMethod',
  full_name='events_log.GetEventsRequest.SortMethod',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TIME_ASC', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TIME_DESC', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TURN_ASC', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TURN_DESC', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=341,
  serialized_end=411,
)
_sym_db.RegisterEnumDescriptor(_GETEVENTSREQUEST_SORTMETHOD)


_EVENT = _descriptor.Descriptor(
  name='Event',
  full_name='events_log.Event',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='events_log.Event.id', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='events_log.Event.data', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tags', full_name='events_log.Event.tags', index=2,
      number=3, type=4, cpp_type=4, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='turn', full_name='events_log.Event.turn', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='time', full_name='events_log.Event.time', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=32,
  serialized_end=107,
)


_ADDEVENTREQUEST = _descriptor.Descriptor(
  name='AddEventRequest',
  full_name='events_log.AddEventRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tags', full_name='events_log.AddEventRequest.tags', index=0,
      number=1, type=4, cpp_type=4, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='events_log.AddEventRequest.data', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='turn', full_name='events_log.AddEventRequest.turn', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='time', full_name='events_log.AddEventRequest.time', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=109,
  serialized_end=182,
)


_ADDEVENTSRESPONSE = _descriptor.Descriptor(
  name='AddEventsResponse',
  full_name='events_log.AddEventsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=184,
  serialized_end=203,
)


_GETEVENTSREQUEST = _descriptor.Descriptor(
  name='GetEventsRequest',
  full_name='events_log.GetEventsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tags', full_name='events_log.GetEventsRequest.tags', index=0,
      number=1, type=4, cpp_type=4, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='page', full_name='events_log.GetEventsRequest.page', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='records_on_page', full_name='events_log.GetEventsRequest.records_on_page', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sort_method', full_name='events_log.GetEventsRequest.sort_method', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _GETEVENTSREQUEST_SORTMETHOD,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=206,
  serialized_end=411,
)


_GETEVENTSRESPONSE = _descriptor.Descriptor(
  name='GetEventsResponse',
  full_name='events_log.GetEventsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=413,
  serialized_end=432,
)


_DEBUGCLEARSERVICEREQUEST = _descriptor.Descriptor(
  name='DebugClearServiceRequest',
  full_name='events_log.DebugClearServiceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=434,
  serialized_end=460,
)


_DEBUGCLEARSERVICERESPONSE = _descriptor.Descriptor(
  name='DebugClearServiceResponse',
  full_name='events_log.DebugClearServiceResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=462,
  serialized_end=489,
)

_GETEVENTSREQUEST.fields_by_name['sort_method'].enum_type = _GETEVENTSREQUEST_SORTMETHOD
_GETEVENTSREQUEST_SORTMETHOD.containing_type = _GETEVENTSREQUEST
DESCRIPTOR.message_types_by_name['Event'] = _EVENT
DESCRIPTOR.message_types_by_name['AddEventRequest'] = _ADDEVENTREQUEST
DESCRIPTOR.message_types_by_name['AddEventsResponse'] = _ADDEVENTSRESPONSE
DESCRIPTOR.message_types_by_name['GetEventsRequest'] = _GETEVENTSREQUEST
DESCRIPTOR.message_types_by_name['GetEventsResponse'] = _GETEVENTSRESPONSE
DESCRIPTOR.message_types_by_name['DebugClearServiceRequest'] = _DEBUGCLEARSERVICEREQUEST
DESCRIPTOR.message_types_by_name['DebugClearServiceResponse'] = _DEBUGCLEARSERVICERESPONSE

Event = _reflection.GeneratedProtocolMessageType('Event', (_message.Message,), dict(
  DESCRIPTOR = _EVENT,
  __module__ = 'events_log_pb2'
  # @@protoc_insertion_point(class_scope:events_log.Event)
  ))
_sym_db.RegisterMessage(Event)

AddEventRequest = _reflection.GeneratedProtocolMessageType('AddEventRequest', (_message.Message,), dict(
  DESCRIPTOR = _ADDEVENTREQUEST,
  __module__ = 'events_log_pb2'
  # @@protoc_insertion_point(class_scope:events_log.AddEventRequest)
  ))
_sym_db.RegisterMessage(AddEventRequest)

AddEventsResponse = _reflection.GeneratedProtocolMessageType('AddEventsResponse', (_message.Message,), dict(
  DESCRIPTOR = _ADDEVENTSRESPONSE,
  __module__ = 'events_log_pb2'
  # @@protoc_insertion_point(class_scope:events_log.AddEventsResponse)
  ))
_sym_db.RegisterMessage(AddEventsResponse)

GetEventsRequest = _reflection.GeneratedProtocolMessageType('GetEventsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETEVENTSREQUEST,
  __module__ = 'events_log_pb2'
  # @@protoc_insertion_point(class_scope:events_log.GetEventsRequest)
  ))
_sym_db.RegisterMessage(GetEventsRequest)

GetEventsResponse = _reflection.GeneratedProtocolMessageType('GetEventsResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETEVENTSRESPONSE,
  __module__ = 'events_log_pb2'
  # @@protoc_insertion_point(class_scope:events_log.GetEventsResponse)
  ))
_sym_db.RegisterMessage(GetEventsResponse)

DebugClearServiceRequest = _reflection.GeneratedProtocolMessageType('DebugClearServiceRequest', (_message.Message,), dict(
  DESCRIPTOR = _DEBUGCLEARSERVICEREQUEST,
  __module__ = 'events_log_pb2'
  # @@protoc_insertion_point(class_scope:events_log.DebugClearServiceRequest)
  ))
_sym_db.RegisterMessage(DebugClearServiceRequest)

DebugClearServiceResponse = _reflection.GeneratedProtocolMessageType('DebugClearServiceResponse', (_message.Message,), dict(
  DESCRIPTOR = _DEBUGCLEARSERVICERESPONSE,
  __module__ = 'events_log_pb2'
  # @@protoc_insertion_point(class_scope:events_log.DebugClearServiceResponse)
  ))
_sym_db.RegisterMessage(DebugClearServiceResponse)


# @@protoc_insertion_point(module_scope)
